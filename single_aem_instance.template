{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template Single AEM Instance: Create an Amazon EC2 instance running the Amazon Linux AMI with a Trial version of Adobe AEM configured in a author, publish format. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "EC2 instance type, recommended a large instance e.g. m4.large",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : "Your Public IP address range that will be given access for SSH access to your EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   },
   
   "AEMDownloadUrl" : {
     "Description" : "A URL to your AEM_6.1_Quickstart.jar packaged as a Zip, The Cloud Init script will download the zip and unpack accordingly",
     "Type" : "String",
     "Default" : "e.g. https://s3-eu-west-1.amazonaws.com/AEM_6.1_Quickstart.zip",
     "MinLength": "1"
   }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    },
    
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-22111148", "HVM64" : "ami-08111162", "HVMG2" : "ami-ebcec381"},
      "us-west-2"        : {"PV64" : "ami-792bc219", "HVM64" : "ami-c229c0a2", "HVMG2" : "ami-0f28c06f"},
      "us-west-1"        : {"PV64" : "ami-0e087a6e", "HVM64" : "ami-1b0f7d7b", "HVMG2" : "ami-ab9defcb"},
      "eu-west-1"        : {"PV64" : "ami-a5368cd6", "HVM64" : "ami-31328842", "HVMG2" : "ami-d1d652a2"},
      "eu-central-1"     : {"PV64" : "ami-2bde3944", "HVM64" : "ami-e2df388d", "HVMG2" : "ami-5240a73d"},
      "ap-northeast-1"   : {"PV64" : "ami-37020959", "HVM64" : "ami-f80e0596", "HVMG2" : "ami-34a9a35a"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-6598510b", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-ff0cc79c", "HVM64" : "ami-e90dc68a", "HVMG2" : "ami-6f6ca70c"},
      "ap-southeast-2"   : {"PV64" : "ami-f5210196", "HVM64" : "ami-f2210191", "HVMG2" : "ami-88c1e1eb"},
      "sa-east-1"        : {"PV64" : "ami-661e930a", "HVM64" : "ami-1e159872", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-08ef2465", "HVM64" : "ami-49e22924", "HVMG2" : "NOT_SUPPORTED"}
    },
    
    "Region2Principal" : {
      "us-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "us-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "us-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "eu-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-southeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-northeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-northeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "ap-southeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "sa-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
      "cn-north-1"     : { "EC2Principal" : "ec2.amazonaws.com.cn", "OpsWorksPrincipal" : "opsworks.amazonaws.com.cn" },
      "eu-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" }
    },
    
    "Region2ARNPrefix": {
      "us-east-1"      : { "ARNPrefix": "arn:aws:" },
      "us-west-1"      : { "ARNPrefix": "arn:aws:" },
      "us-west-2"      : { "ARNPrefix": "arn:aws:" },
      "eu-west-1"      : { "ARNPrefix": "arn:aws:" },
      "ap-northeast-1" : { "ARNPrefix": "arn:aws:" },
      "ap-northeast-2" : { "ARNPrefix": "arn:aws:" },
      "ap-southeast-1" : { "ARNPrefix": "arn:aws:" },
      "ap-southeast-2" : { "ARNPrefix": "arn:aws:" },
      "sa-east-1"      : { "ARNPrefix": "arn:aws:" },
      "cn-north-1"     : { "ARNPrefix": "arn:aws-cn:" },
      "eu-central-1"   : { "ARNPrefix": "arn:aws:" }
    }
  },

  "Resources" : {
		
    	"LogRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": [{ "Fn::FindInMap" : ["Region2Principal", {"Ref" : "AWS::Region"}, "EC2Principal"]}] },
            "Action": [ "sts:AssumeRole" ]
        } ] },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "LogRolePolicy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents", "logs:DescribeLogStreams"],
              "Resource": [ { "Fn::Join" : ["", [ { "Fn::FindInMap" : ["Region2ARNPrefix", {"Ref" : "AWS::Region"}, "ARNPrefix"] }, 
                            "logs:*:*:*" ]]}]
          } ] }
        } ]
      }
    },

    "LogRoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "LogRole" } ]
      }
    },

    "CloudFormationLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 7
      }
    },    
    
    
    	"AemInstance": {  
			"Type": "AWS::EC2::Instance",
			"Metadata" : {
     			"AWS::CloudFormation::Init" : {
          			"configSets" : {
            				"InstallAndRun" : [ "Config","InstallLogs","InstallAem","Run" ]
          				},
              		"Config" : {
                		"files" : {
			              "/etc/cfn/cfn-hup.conf" : {
			                "content" : { "Fn::Join" : ["", [
			                  "[main]\n",
			                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
			                  "region=", { "Ref" : "AWS::Region" }, "\n"
			                ]]},
			                "mode"    : "000400",
			                "owner"   : "root",
			                "group"   : "root"
			              },
			
			              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
			                "content": { "Fn::Join" : ["", [
			                  "[cfn-auto-reloader-hook]\n",
			                  "triggers=post.update\n",
			                  "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
			                  "action=/opt/aws/bin/cfn-init -v ",
			                  "         --stack ", { "Ref" : "AWS::StackName" },
			                  "         --resource WebServerInstance ",
			                  "         --configsets install_all ",
			                  "         --region ", { "Ref" : "AWS::Region" }, "\n",
			                  "runas=root\n"
			                ]]}
			              }
			            },
			
			            "services" : {
			              "sysvinit" : {
			                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
			                              "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
			              }
			            }
                  	}, 
                   	"InstallLogs" : {
                      "packages" : {
			              "yum" : {
			                "awslogs" : []
			              }
			            },
			
			            "files": {
			              "/etc/awslogs/awslogs.conf": {
			                "content": { "Fn::Join": [ "", [
			                  "[general]\n",
			                  "state_file= /var/awslogs/state/agent-state\n",
			
			                  "[/var/log/cloud-init.log]\n",
			                  "file = /var/log/cloud-init.log\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/cloud-init.log\n",
			                  "datetime_format = \n",
			
			                  "[/var/log/cloud-init-output.log]\n",
			                  "file = /var/log/cloud-init-output.log\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/cloud-init-output.log\n",
			                  "datetime_format = \n",
			
			                  "[/var/log/cfn-init.log]\n",
			                  "file = /var/log/cfn-init.log\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/cfn-init.log\n",
			                  "datetime_format = \n",
			
			                  "[/var/log/cfn-hup.log]\n",
			                  "file = /var/log/cfn-hup.log\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/cfn-hup.log\n",
			                  "datetime_format = \n",
			
			                  "[/var/log/cfn-wire.log]\n",
			                  "file = /var/log/cfn-wire.log\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/cfn-wire.log\n",
			                  "datetime_format = \n",
			
			                  "[/var/log/httpd]\n",
			                  "file = /var/log/httpd/*\n",
			                  "log_group_name = ", { "Ref": "CloudFormationLogs" }, "\n",
			                  "log_stream_name = {instance_id}/httpd\n",
			                  "datetime_format = %d/%b/%Y:%H:%M:%S\n"
			                ] ] },
			                "mode": "000444",
			                "owner": "root",
			                "group": "root"
			              },
			              "/etc/awslogs/awscli.conf": {
			                "content": { "Fn::Join": [ "", [
			                  "[plugins]\n",
			                  "cwlogs = cwlogs\n",
			                  "[default]\n",
			                  "region = ", { "Ref" : "AWS::Region" }, "\n"
			                ] ] },
			                "mode": "000444",
			                "owner": "root",
			                "group": "root"
			              }
                 		},
			            "commands" : {
			              "01_create_state_directory" : {
			                "command" : "mkdir -p /var/awslogs/state"
			              }
			            },
			            "services" : {
			              "sysvinit" : {
			                "awslogs"    : { "enabled" : "true", "ensureRunning" : "true",
			                                 "files" : [ "/etc/awslogs/awslogs.conf" ] }
			              }
			            }
                    }, 
              		"InstallAem" : {
                  		"packages" : {
              				"yum" : {}
             			},
                		"sources" : {
	     					"/etc/aem/" : { "Ref" : "AEMDownloadUrl" }
	   					},
         				"commands" : {
               				"03_unpack" : {
				               	"command" : "java -jar AEM_6.1_Quickstart.jar -unpack",
                    			"cwd" : "/etc/aem/"
				            }
               			}
                	},
                 	"Run" : {
                     	"commands" : {
                    		"01_start_author" : {
		                		"command" : "CQ_PORT=80 ./start",
                    			"cwd" : "/etc/aem/crx-quickstart/bin/"
		              		}
                        }                     
                    }               
                }
     		},
   			"Properties": {
			    "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
			                      { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
			    "InstanceType"   : { "Ref" : "InstanceType" },
			    "SecurityGroups" : [ {"Ref" : "AemInstanceSecurityGroup"} ],
			    "KeyName"        : { "Ref" : "KeyName" },
			    "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
			         "#!/bin/bash -xe\n",
			         "yum update -y aws-cfn-bootstrap\n",
					 "# Install the files and packages from the metadata\n",
			         "/opt/aws/bin/cfn-init -v ",
			         "         --stack ", { "Ref" : "AWS::StackName" },
			         "         --resource AemInstance ",
			         "         --configsets InstallAndRun ",
			         "         --region ", { "Ref" : "AWS::Region" }, "\n",
			         "# Signal the status from cfn-init\n",
			         "/opt/aws/bin/cfn-signal -e $? ",
			         "         --stack ", { "Ref" : "AWS::StackName" },
			         "         --resource AemInstance ",
			         "         --region ", { "Ref" : "AWS::Region" }, "\n"
			    ]]}}        
			  },
	      "CreationPolicy" : {
	        "ResourceSignal" : {
	          "Timeout" : "PT5M"
	        }
	      }
    },

    "AemInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 locked down to the load balancer + SSH access",
        "SecurityGroupIngress" : [ 
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "4502", "ToPort" : "4502", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp","FromPort" : "22","ToPort" : "22","CidrIp" : { "Ref" : "SSHLocation"}
        } ]
      }
    }
  },
  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "AemInstance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "AemInstance", "AvailabilityZone" ] }
    },
    "PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "AemInstance", "PublicDnsName" ] }
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "AemInstance", "PublicIp" ] }
    }
  }
}